# 1. Дан список с визитами по городам и странам. Напишите код, который возвращает отфильтрованный список geo_logs,
# содержащий только визиты из России. Считайте, что список geo_logs легко помещается в оперативной памяти.
print('Задание 1.')
geo_logs = [
    {'visit1': ['Москва', 'Россия']},
    {'visit2': ['Дели', 'Индия']},
    {'visit3': ['Владимир', 'Россия']},
    {'visit4': ['Лиссабон', 'Португалия']},
    {'visit5': ['Париж', 'Франция']},
    {'visit6': ['Лиссабон', 'Португалия']},
    {'visit7': ['Тула', 'Россия']},
    {'visit8': ['Тула', 'Россия']},
    {'visit9': ['Курск', 'Россия']},
    {'visit10': ['Архангельск', 'Россия']},
]

geo_logs_ru = []
for i in range(len(geo_logs)):
    [geo_logs_ru.append(geo_logs[i]) for key in geo_logs[i] if geo_logs[i][key][1] == 'Россия']
print('Визиты из России:')
print(*geo_logs_ru, sep='\n')
print('\n')


# 2. Выведите на экран все уникальные гео - ID из значений словаря ids. Т.е.список вида[213, 15, 54, 119, 98, 35]
print('Задание 2.')
ids = {'user1': [213, 213, 213, 15, 213], 'user2': [54, 54, 119, 119, 119], 'user3': [213, 98, 98, 35]}

print('вариант 1, через set')
ids_unique_set = set()
for key in ids:
    new_set = set(ids[key])
    ids_unique_set = set.union(new_set, ids_unique_set)
print('Уникальные гео - ID: ', list(ids_unique_set), '\n')

print('вариант 2, через list')
ids_unique = []
for key in ids:
    [ids_unique.append(i) for i in ids[key] if i not in ids_unique]
print('Уникальные гео - ID: ', ids_unique, '\n')


# 3. Список поисковых запросов. Получить распределение количества слов в них.
# Т. е. поисковых запросов из одного слова 5%, из двух - 7%, из трех - 3% итд.
print('Задание 3.')
queries = [
    'смотреть сериалы онлайн',
    'новости спорта',
    'афиша кино',
    'курс доллара',
    'сериалы этим летом',
    'курс по питону',
    'сериалы про спорт',
]

res = {}

for i in queries:
    newstring = ' '.join(i.split())
    num = newstring.count(' ') + 1
    if num in res:
        res[num] += 1
    else:
        res[num] = 1

for key in res:
    res[key] = round((res[key] * 100) / len(queries), 2)
print('Процентное распределение количества слов в запросах: ', res, '\n')


# 4. Дана статистика рекламных каналов по объемам продаж. Напишите скрипт, который возвращает название канала с максимальным объемом.
# Т. е. в данном примере скрипт должен возвращать 'yandex'.
print('Задание 4.')
stats = {'facebook': 55, 'yandex': 120, 'vk': 115, 'google': 99, 'email': 42, 'ok': 98}

res = []
max_sale = 0

for key in stats:
    if stats[key] >= max_sale:
        max_sale = stats[key]
print('Максимальный объем продаж: ', max_sale)

[res.append(key) for key in stats if stats[key] == max_sale] # если каналов с макс. объемом продаж несколько
print('Название канала(ов): ', res, '\n')


# 5. Дан поток логов по количеству просмотренных страниц для каждого пользователя.
# Список отсортирован по ID пользователя. Вам необходимо написать алгоритм, который считает среднее значение просмотров на пользователя.
# Т. е. надо посчитать отношение суммы всех просмотров к количеству уникальных пользователей.
# Учтите, что весь список stream не помещается в оперативную память, т. е. его нужно обрабатывать поэлементно в цикле.
print('Задание 5.')
stream = [
    '2018-01-01,user1,3',
    '2018-01-07,user1,4',
    '2018-03-29,user1,1',
    '2018-04-04,user1,13',
    '2018-01-05,user2,7',
    '2018-06-14,user3,4',
    '2018-07-02,user3,10',
    '2018-03-21,user4,19',
    '2018-03-22,user4,4',
    '2018-04-22,user4,8',
    '2018-05-03,user4,9',
    '2018-05-11,user4,11',
]

users_q = 0
users_id = []
all_views_q = 0

for i in stream:
    rec = i.split(',')
    if rec[1] not in users_id:
        users_id.append(rec[1])
        users_q += 1
    all_views_q += int(rec[2])

print('Среднее значение просмотров на пользователя: ', all_views_q / users_q, '\n')


# 6. Дана статистика рекламных кампаний по дням. Напишите алгоритм, который по паре дата-кампания ищет значение численного столбца.
# Т. е. для даты '2018-01-01' и 'google' нужно получить число 25.
# Считайте, что все комбинации дата-кампания уникальны, а список stats легко помещается в оперативной памяти.
print('Задание 6. --не понимаю, как использовать set')
stats = [
    ['2018-01-01', 'google', 25],
    ['2018-01-01', 'yandex', 65],
    ['2018-01-01', 'market', 89],
    ['2018-01-02', 'google', 574],
    ['2018-01-02', 'yandex', 249],
    ['2018-01-02', 'market', 994],
    ['2018-01-03', 'google', 1843],
    ['2018-01-03', 'yandex', 1327],
    ['2018-01-03', 'market', 1764],
]

res = -1
for i in range(len(stats)):
    if res != -1:
        break
    else:
        *keys, last = stats[i]
        if keys == ['2018-01-02', 'google']:
            res = last
print(res)
